from sys import stdin
MAX_VALUE = 2147483647

def minCostPath(input, mRows, nCols) :
    for i in range(1, mRows):

        input[i][0] += input[i - 1][0]
    for j in range(1, nCols):
        input[0][j] += input[0][j - 1]
    for i in range(1, mRows):
        for j in range(1, nCols):
            input[i][j] += (min(input[i - 1][j - 1],  min(input[i - 1][j],input[i][j - 1])))
    return input[mRows - 1][nCols - 1]


























#taking input using fast I/O method
def take2DInput() :
    li = stdin.readline().rstrip().split(" ")
    mRows = int(li[0])
    nCols = int(li[1])
    
    if mRows == 0 :
        return list(), 0, 0
    
    mat = [list(map(int, input().strip().split(" "))) for row in range(mRows)]
    return mat, mRows, nCols


#main
mat, mRows, nCols = take2DInput()
print(minCostPath(mat, mRows, nCols))